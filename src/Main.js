
// import React from "react";
// import {
//     SafeAreaView,
//     StyleSheet,
//     View,
//     Text,
//     StatusBar
// } from "react-native";

// import {
//     Colors,
// } from "react-native/Libraries/NewAppScreen";
var PushNotification = require('react-native-push-notification');
import { createAppContainer } from 'react-navigation';
import { createStackNavigator } from 'react-navigation-stack';
import HomeScreen from './Home/Home';
import AddWordScreen from './Home/AddWord';
import {ROUTE_NAME} from './constant';
 
PushNotification.configure({
    // (optional) Called when Token is generated (iOS and Android)
    onRegister: function (token) {
        console.log('TOKEN:', token);
    },

    // (required) Called when a remote or local notification is opened or received
    onNotification: function (notification) {
        console.log('NOTIFICATION:', notification);

        // process the notification

        // required on iOS only (see fetchCompletionHandler docs: https://github.com/react-native-community/react-native-push-notification-ios)
        //   notification.finish(PushNotificationIOS.FetchResult.NoData);
    },

    // // ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)
    // senderID: "YOUR GCM (OR FCM) SENDER ID",

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,

    /**
     * (optional) default: true
     * - Specified if permissions (ios) and token (android and ios) will requested or not,
     * - if not, you must call PushNotificationsHandler.requestPermissions() later
     */
    requestPermissions: true,
});

// export interface Props {
//     name: string;
//     enthusiasmLevel?: number;
// }

// interface State {
//     enthusiasmLevel: number;
// }

// export class Main extends React.Component<Props, State> {
//     componentDidMount = () => {
//         console.log("-------DID mount 1 ");

//         // // setInterval(() => {
//         // const id = Math.floor(Math.random() * 10 + 1) + "";
//         // const x = PushNotification.localNotificationSchedule({
//         //     /* Android Only Properties */
//         //     id: id, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
//         //     ticker: 'My Notification Ticker', // (optional)
//         //     autoCancel: true, // (optional) default: true
//         //     largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
//         //     smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
//         //     bigText: '', // (optional) default: "message" prop
//         //     subText: '', // (optional) default: none
//         //     color: 'red', // (optional) default: system default
//         //     vibrate: true, // (optional) default: true
//         //     vibration: 400, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
//         //     tag: "2", // (optional) add tag to message
//         //     group: '1', // (optional) add group to message
//         //     ongoing: false, // (optional) set whether this is an "ongoing" notification
//         //     priority: 'high', // (optional) set notification priority, default: high
//         //     visibility: 'private', // (optional) set notification visibility, default: private
//         //     importance: 'high', // (optional) set notification importance, default: high
//         //     message: 'My Notification Message 3', // (required)// message on band
//         //     date: new Date(Date.now() + 2 * 1000),
//         //     repeatType: "time",
//         //     repeatTime: 1000
//         // });
//         // console.log("-------result  ", x);
//         // // setTimeout(() => {

//         // //     PushNotification.cancelLocalNotifications({ id: id });
//         // // }, 2100);

//         // // }, 2000);

//         // // BackgroundTask.schedule( {
//         // //     period: 900,

//         // // });
//     };

//     render() {
//         return (
//             <View>
//                 <StatusBar barStyle="dark-content" />
//                 <SafeAreaView>
//                     <Text>xxx</Text>
//                 </SafeAreaView>
//             </View>
//         );
//     }
// }

// const styles = StyleSheet.create({
//     scrollView: {
//         backgroundColor: Colors.lighter
//     },
// });

const AppNavigator = createStackNavigator({
    Home: {
        navigationOptions: {
            title: 'Home',
        },
        screen: HomeScreen,
    },
    AddWord: {
        navigationOptions: {
            title: 'Add Word',
        },
        screen: AddWordScreen,
    }
}, {
    initialRouteName: 'Home',
});

export default createAppContainer(AppNavigator);
